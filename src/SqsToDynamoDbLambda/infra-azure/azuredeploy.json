{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "defaultValue": "msgproc",
            "metadata": {
                "description": "Base name of the resources to be created"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "serviceBusQueueName": {
            "type": "string",
            "defaultValue": "messagequeue",
            "metadata": {
                "description": "Name of the Service Bus Queue"
            }
        },
        "cosmosDbDatabaseName": {
            "type": "string",
            "defaultValue": "MessageDatabase",
            "metadata": {
                "description": "Name of the Cosmos DB database"
            }
        },
        "cosmosDbContainerName": {
            "type": "string",
            "defaultValue": "Messages",
            "metadata": {
                "description": "Name of the Cosmos DB container"
            }
        },
        "cosmosDbThroughput": {
            "type": "int",
            "defaultValue": 400,
            "metadata": {
                "description": "Throughput for the Cosmos DB container"
            },
            "minValue": 400,
            "maxValue": 1000000
        }
    },
    "variables": {
        "functionAppName": "[concat(parameters('appName'), '-function')]",
        "serviceBusNamespaceName": "[concat(parameters('appName'), '-servicebus')]",
        "cosmosDbAccountName": "[concat(parameters('appName'), '-cosmos')]",
        "storageAccountName": "[concat(toLower(parameters('appName')), 'storage')]",
        "hostingPlanName": "[concat(parameters('appName'), '-plan')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "reserved": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "ServiceBusConnectionString",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        },
                        {
                            "name": "ServiceBusQueueName",
                            "value": "[parameters('serviceBusQueueName')]"
                        },
                        {
                            "name": "CosmosDbConnectionString",
                            "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2022-05-15').connectionStrings[0].connectionString]"
                        },
                        {
                            "name": "CosmosDbDatabaseName",
                            "value": "[parameters('cosmosDbDatabaseName')]"
                        },
                        {
                            "name": "CosmosDbContainerName",
                            "value": "[parameters('cosmosDbContainerName')]"
                        }
                    ],
                    "ftpsState": "Disabled",
                    "minTlsVersion": "1.2",
                    "netFrameworkVersion": "v8.0"
                },
                "httpsOnly": true
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2022-01-01-preview",
            "name": "[variables('serviceBusNamespaceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('serviceBusNamespaceName'), '/', parameters('serviceBusQueueName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
            ],
            "properties": {
                "lockDuration": "PT5M",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('serviceBusNamespaceName'), '/RootManageSharedAccessKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2022-05-15",
            "name": "[variables('cosmosDbAccountName')]",
            "location": "[parameters('location')]",
            "kind": "GlobalDocumentDB",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session"
                },
                "locations": [
                    {
                        "locationName": "[parameters('location')]",
                        "failoverPriority": 0
                    }
                ],
                "capabilities": []
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2022-05-15",
            "name": "[concat(variables('cosmosDbAccountName'), '/', parameters('cosmosDbDatabaseName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[parameters('cosmosDbDatabaseName')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2022-05-15",
            "name": "[concat(variables('cosmosDbAccountName'), '/', parameters('cosmosDbDatabaseName'), '/', parameters('cosmosDbContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[parameters('cosmosDbContainerName')]",
                    "partitionKey": {
                        "paths": [
                            "/id"
                        ],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {
                    "throughput": "[parameters('cosmosDbThroughput')]"
                }
            }
        }
    ],
    "variables": {
        "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), 'RootManageSharedAccessKey')]"
    },
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        },
        "serviceBusNamespace": {
            "type": "string",
            "value": "[variables('serviceBusNamespaceName')]"
        },
        "serviceBusQueueName": {
            "type": "string",
            "value": "[parameters('serviceBusQueueName')]"
        },
        "cosmosDbAccountName": {
            "type": "string",
            "value": "[variables('cosmosDbAccountName')]"
        },
        "cosmosDbDatabaseName": {
            "type": "string",
            "value": "[parameters('cosmosDbDatabaseName')]"
        },
        "cosmosDbContainerName": {
            "type": "string",
            "value": "[parameters('cosmosDbContainerName')]"
        }
    }
}